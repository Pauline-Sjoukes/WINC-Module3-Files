__winc_id__ = 'ae539110d03e49ea8738fd413ac44ba8'
__human_name__ = 'files'

# Add your code after this line
import os
import shutil



rare_tussenstap = "files"                       # waarom is deze stap nodig? Dit bestand staat al in de map files, waarom moet ik die dan nog appart noemen?
directory = "cache"                             # naming my new file
path = os.getcwd()                              # determining where we are now
cache = os.path.join(path, rare_tussenstap, directory)        # creating the right path to make file

def clean_cache():  
    try:
        shutil.rmtree(cache)                    # if file is already there -> delete it and its contents      
    except OSError:
        print("No directory found to delete")
    else:
        print("Directory 'cache' was deleted")
    try:                 
        os.mkdir(cache)                         # making new cache file
    except OSError:
        print("Directory cache is not made")
    else:
        print("Directory 'cache' is made, well done!")



def cache_zip(zip_path, dir_path):
    clean_cache()                               # making new clean cache file
    shutil.unpack_archive(zip_path, dir_path)   # unpacking zip file in cache file



def cached_files():                     
    list_of_files = os.listdir(cache)                   # gives name of items in cache directory
    list_of_file_paths = []
    for file in list_of_files:                          # each item gets an absoluut pathname
        path_to_file = os.path.join(cache, file)
        if os.path.isfile(path_to_file) == True:        # if the item is a file and not a directory it is added to list to return
            list_of_file_paths.append(path_to_file)
    return list_of_file_paths



def find_password(file_path_list):
    for file in file_path_list:                         # every file is called
        with open(file) as f :                          # file is opend
            line = f.readline()
            while line:                                 # file is read line by line
                line = f.readline()
                if 'password:' in line.lower():         # if line contains 'password' the password is extracted and returned
                    password = line[9:]
                    answer = password.strip()
                    return answer
